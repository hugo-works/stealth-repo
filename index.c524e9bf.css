*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  font-size: 20px;
}

@font-face {
  font-family: "Gar-A-MondTall";
  src: url("Gar-A-MondTall-Light.dc148974.woff2") format("woff2"),
    url("Gar-A-MondTall-Light.ee024ad8.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Uxum Grotesque";
  src: url("UxumGrotesque-Regular.e9e24171.woff2") format("woff2"),
    url("UxumGrotesque-Regular.bb6c65ae.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Uxum Grotesque";
  src: url("UxumGrotesque-Light.78c544a7.woff2") format("woff2"),
    url("UxumGrotesque-Light.6add41c2.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

body {
  margin: 0;
  margin-left: 2rem;
  --color-text: #f3f3f3;
  --color-bg: #121212;
  --color-link: #f3f3f3;
  --color-link-hover: #000;
  --text-font-size: 0.7rem;
  color: var(--color-text);
  background-color: var(--color-bg);
  font-family: "Uxum Grotesque", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  --cursor-stroke: #f3f3f3;
  --cursor-fill: none;
  --cursor-stroke-width: 1px;
  line-height: 1;
  font-weight: 300;
  overflow: hidden;
  overflow-y: scroll;
}

.oh {
  overflow: hidden;
}

/* Page Loader */

.js .loading::before,
.js .loading::after {
  content: "";
  position: fixed;
  z-index: 3000;
}

.js .loading::before {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-bg);
}

.js .loading::after {
  top: 50%;
  left: 50%;
  width: 60px;
  height: 60px;
  margin: -30px 0 0 -30px;
  border-radius: 50%;
  opacity: 0.4;
  background: var(--color-link);
  animation: loaderAnim 0.7s linear infinite alternate forwards;
}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5, 0.5, 1);
  }
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
}

a:hover {
  color: var(--color-link-hover);
  outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */

a:focus {
  /* Provide a fallback style for browsers
	 that don't support :focus-visible */
  outline: none;
  background: lightgrey;
}

a:focus:not(:focus-visible) {
  /* Remove the focus indicator on mouse-focus for browsers
	 that do support :focus-visible */
  background: transparent;
}

a:focus-visible {
  /* Draw a very noticeable focus style for
	 keyboard-focus on browsers that do support
	 :focus-visible */
  outline: 2px solid red;
  background: transparent;
}

.unbutton {
  background: none;
  border: 0;
  padding: 0;
  margin: 0;
  font: inherit;
}

.unbutton:focus {
  outline: none;
}

main {
  padding: 2rem 2rem;
}

.cursor {
  display: none;
}

.frame {
  position: relative;
}

.frame--footer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-top: 40vh;
}

.frame--footer p {
  font-size: var(--text-font-size);
}

.frame__title-wrap {
  width: 80%;
  max-width: 600px;
}

.frame__title {
  font-size: var(--text-font-size);
  margin: 0;
}

.frame__tagline {
  line-height: 1.2;
  max-width: 65ch;
  line-height: 1.3;
  font-size: var(--text-font-size);
  /* text-transform: uppercase; */
  font-weight: 500;
}

.frame__links a:not(:last-child) {
  margin-right: 1rem;
}

.frame__links {
  position: fixed;
  top: 10px;
  left: 1.9rem;
}

.frame__links a {
  font-size: var(--text-font-size);
  line-height: 1.3;
  font-size: 0.67rem;
  /* text-transform: uppercase; */
  font-weight: 500;
  text-decoration: underline;
}

.heading {
  font-family: "Gar-A-MondTall", sans-serif;
  /* font-family: "Suisse Int'l", sans-serif; */
  font-weight: 300;
  font-size: 5.5vw;
  font-size: clamp(2rem, 6vw, 5rem);
  line-height: 1.1;
  padding-left: 2rem;
  /* mix-blend-mode: difference; */
}

.heading .splitting .word,
.heading .splitting .char {
  display: flex;
}

.char-wrap {
  display: inline-block;
  position: relative;
  overflow: hidden;
}

.char {
  display: inline-block;
  will-change: transform;
}

.heading > span {
  display: flex;
}

.heading > span:first-child {
  font-size: 14vw;
  font-size: clamp(2rem, 14vw, 9rem);
}

.heading > span:nth-child(2) {
  margin-top: -2vw;
  text-transform: lowercase;
}

.item {
  margin: 15vh 0 20vh;
}

.item__imgwrap,
.content__imgwrap {
  overflow: hidden;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: 200px;
  will-change: transform;

  /* filter: grey;
  filter: brightness(0.1);
  -webkit-filter: grayscale(1); */
  /* filter: grayscale(1); */
}

.item__img,
.content__img {
  width: 100%;
  height: 100%;
  min-height: 200px;
  background-size: cover;
  background-position: 50% 50%;
  will-change: transform;
}

.item__meta {
  margin: 0.85rem 0 2rem;
  line-height: 1.3;
  font-size: 0.67rem;
  text-transform: uppercase;
  font-weight: 500;
  overflow: hidden;
}

.item__meta-row {
  display: block;
  position: relative;
  overflow: hidden;
}

.item__meta-row span {
  display: block;
  will-change: transform;
  font-size: var(--text-font-size);
}

.item__enter {
  display: none;
  will-change: transform;
}

.item__enter-circle {
  fill: none;
  stroke: #f3f3f3;
  stroke-width: 1px;
  will-change: transform, opacity;
}

.item__excerpt {
  line-height: 1.2;
  will-change: transform;
}

.item__excerpt-link {
  display: inline-block;
  position: relative;
  cursor: pointer;
  color: var(--color-text);
  font-weight: 500;
  line-height: 1;
  overflow: hidden;
  font-size: var(--text-font-size);
}

.item__excerpt-link span {
  display: inline-block;
  padding-bottom: 10px;
  position: relative;
}

.item__excerpt-link span::after {
  content: "";
  width: 100%;
  height: 2px;
  top: calc(100% - 10px);
  position: absolute;
  left: 0;
  background: var(--color-text);
  transition: transform 0.2s;
  transform-origin: 100% 0;
}

.item__excerpt-link span:hover::after {
  transform: scale3d(0, 1, 1);
}

.content {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  z-index: 2000;
  pointer-events: none;
}

.content .heading {
  margin-bottom: 5rem;
  font-size: 10vw;
  font-size: clamp(2rem, 10vw, 6rem);
}

.content .heading > span:first-child {
  font-size: 14vw;
  font-size: clamp(2rem, 14vw, 10rem);
}

.content__article {
  height: 0;
  overflow: hidden;
}

.content__article--open {
  pointer-events: auto;
  padding: 0 0 20vh;
  height: 100%;
  overflow-y: scroll;
}

.content__article .heading {
  text-align: center;
}

.content__article img {
  width: 100%;
  height: auto;
  will-change: transform;
}

.content__text {
  /* padding-left: 2rem; */
  line-height: 1.2;
  /* margin: 0 auto; */
  max-width: 100vw;
  will-change: transform;
}

.content__text p {
  padding-left: 2rem;
  margin: 1.5rem 0;
  font-size: var(--text-font-size);
}

/* .content__text img {
	max-width: 50%;
	margin: 5rem auto;
	display: block;
	border-radius: 50%;
} */

.content__back {
  position: absolute;
  top: 2rem;
  left: 2rem;
  opacity: 0;
  cursor: pointer;
}

.content__article--open ~ .content__back {
  pointer-events: auto;
}

@media screen and (min-width: 53em) {
  .item {
    position: relative;
    display: grid;
    grid-template-areas:
      "image image image enter"
      "meta meta meta meta"
      "... ... excerpt ...";
    grid-template-columns: 1fr auto 360px 1fr;
    grid-template-rows: minmax(420px, 40vh) auto auto;
  }
  .item--invert {
    grid-template-areas:
      "enter image image image"
      "meta meta meta meta"
      "... ... excerpt ...";
    grid-template-columns: 1fr auto 360px 1fr;
  }
  .item__imgwrap {
    grid-area: image;
  }
  .item__img {
    width: 100%;
    height: 100%;
  }
  .item__enter {
    align-self: center;
    justify-self: center;
    display: flex;
    grid-area: enter;
    position: relative;
    z-index: 1000;
    max-width: 400px;
    max-height: 400px;
    align-items: center;
    justify-content: center;
  }
  .item__enter-circle {
    pointer-events: none;
    cursor: pointer;
    flex: none;
  }
  .item__meta {
    grid-area: meta;
  }
  .item--invert .item__meta {
    justify-self: end;
    text-align: right;
  }
  .item__excerpt {
    grid-area: excerpt;
  }
  .item__excerpt p {
    margin: 0 0 1.5rem;
    font-size: var(--text-font-size);
  }
  /* .heading > span {
    justify-content: center;
  } */
  .heading--item {
    margin: 0;
    grid-area: 1 / 1 / 2 / 5;
    justify-self: center;
    align-self: center;
    text-align: center;
  }
}

@media (any-pointer: fine) {
  .cursor {
    position: fixed;
    top: 0;
    left: 0;
    display: block;
    pointer-events: none;
    z-index: 5000;
  }

  .cursor__inner {
    fill: var(--cursor-fill);
    stroke: var(--cursor-stroke);
    stroke-width: var(--cursor-stroke-width);
    opacity: 0.7;
  }

  .no-js .cursor {
    display: none;
  }
}

/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
  display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
  position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
  content: attr(data-char);
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  transition: inherit;
  user-select: none;
}

/* Expanded CSS Variables */

.splitting {
  /* The center word index */
  --word-center: calc((var(--word-total) - 1) / 2);

  /* The center character index */
  --char-center: calc((var(--char-total) - 1) / 2);

  /* The center character index */
  --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
  /* Pecent (0-1) of the word's position */
  --word-percent: calc(var(--word-index) / var(--word-total));

  /* Pecent (0-1) of the line's position */
  --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
  /* Percent (0-1) of the char's position */
  --char-percent: calc(var(--char-index) / var(--char-total));

  /* Offset from center, positive & negative */
  --char-offset: calc(var(--char-index) - var(--char-center));

  /* Absolute distance from center, only positive */
  --distance: calc(
     (var(--char-offset) * var(--char-offset)) / var(--char-center)
  );

  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
  --distance-sine: calc(var(--char-offset) / var(--char-center));

  /* Distance from center where 1 is far left/far right, 0 is center */
  --distance-percent: calc((var(--distance) / var(--char-center)));
}

.splitting.cells img { width: 100%; display: block; }

@supports ( display: grid ) {
  .splitting.cells {
    position: relative;
    overflow: hidden;
    background-size: cover;
    visibility: hidden;
  }

  .splitting .cell-grid {
    background: inherit;
    position: absolute;
    top: 0; 
    left: 0; 
    width: 100%; 
    height: 100%;
    display: grid;
    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );
  }

  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-inner {
    background: inherit;
    position: absolute;
    visibility: visible;
    /* Size to fit the whole container size */
    width: calc(100% * var(--col-total));
    height: calc(100% * var(--row-total));
    /* Position properly */
    left: calc(-100% * var(--col-index));
    top: calc(-100% * var(--row-index));
  }

  /* Helper variables for advanced effects */
  .splitting .cell {
    --center-x: calc((var(--col-total) - 1) / 2);
    --center-y: calc((var(--row-total) - 1) / 2);

    /* Offset from center, positive & negative */
    --offset-x: calc(var(--col-index) - var(--center-x));
    --offset-y: calc(var(--row-index) - var(--center-y));

    /* Absolute distance from center, only positive */
    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );

    /* Absolute distance from center, only positive */
    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );
  }
}


/*# sourceMappingURL=index.c524e9bf.css.map */
